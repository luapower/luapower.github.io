return {
	expat={
		category='07. Internet Formats',
		tagline='XML parser',
		modules={
			expat={
				source_link={
					'source',
					'https://github.com/luapower/expat/blob/master/expat.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glue',
						'glue.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/expat/blob/master/expat_test.lua'
				}
			}
		},
		link={
			'expat',
			'expat.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			linux64=true
		},
		name='expat',
		type='Lua+ffi',
		git_tag='r2',
		c_license='MIT',
		c_link={
			'expat 2.1.0',
			'http://sourceforge.net/projects/expat/files/expat/'
		}
	},
	luajit={
		category='37. Support Packages',
		tagline='LuaJIT binary',
		modules={
		},
		link={
			'luajit',
			'luajit.html'
		},
		platforms={
			linux32=true,
			mingw32=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			linux64=true
		},
		name='luajit',
		type='Lua',
		git_tag='r5',
		c_license='MIT',
		c_link={
			'luajit 2.0.3',
			'http://luajit.org/download.html'
		}
	},
	easing={
		category='33. Motion',
		link={
			'easing',
			'easing.html'
		},
		platforms={
		},
		tagline='easing functions',
		type='Lua',
		git_tag='r1',
		name='easing',
		modules={
			easing={
				source_link={
					'source',
					'https://github.com/luapower/easing/blob/master/easing.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				demo_link={
					'demo',
					'https://github.com/luapower/easing/blob/master/easing_demo.lua'
				}
			}
		}
	},
	oo={
		type='Lua',
		link={
			'oo',
			'oo.html'
		},
		platforms={
		},
		git_tag='r3',
		category='01. Basic tools',
		tagline='fancy object system',
		name='oo',
		modules={
			oo={
				source_link={
					'source',
					'https://github.com/luapower/oo/blob/master/oo.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/oo/blob/master/oo_test.lua'
				}
			}
		}
	},
	libexif={
		category='23. Images',
		tagline='EXIF reader & writer',
		modules={
			libexif={
				source_link={
					'source',
					'https://github.com/luapower/libexif/blob/master/libexif.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				}
			}
		},
		link={
			'libexif',
			'libexif.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			mingw32=true
		},
		name='libexif',
		type='Lua+ffi',
		git_tag='dev',
		c_license='LGPL',
		c_link={
			'libexif 0.6.21',
			'http://libexif.sourceforge.net/'
		}
	},
	amanithvg={
		category='Other',
		modules={
		},
		link={
			'amanithvg',
			'https://github.com/luapower/amanithvg'
		},
		platforms={
			mingw64=true,
			mingw32=true
		},
		name='amanithvg',
		type='Lua+ffi',
		git_tag='dev',
		c_license='evaluation',
		c_link={
			'amanithvg sre-4.0.0.689-eval',
			'http://www.amanithvg.com/'
		}
	},
	libjpeg={
		category='23. Images',
		tagline='JPEG reader',
		modules={
			libjpeg={
				source_link={
					'source',
					'https://github.com/luapower/libjpeg/blob/master/libjpeg.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'stdc',
						'https://github.com/luapower/stdc'
					}
				},
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'jit'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'stdio',
						'https://github.com/luapower/stdc/blob/master/stdio.lua'
					},
					{
						'stdio_h',
						'https://github.com/luapower/stdc/blob/master/stdio_h.lua'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/libjpeg/blob/master/libjpeg_demo.lua'
				}
			}
		},
		link={
			'libjpeg',
			'libjpeg.html'
		},
		platforms={
			linux32=true,
			mingw32=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			linux64=true
		},
		name='libjpeg',
		type='Lua+ffi',
		git_tag='dev',
		c_license='BSD',
		c_link={
			'libjpeg-turbo 1.3.0',
			'http://downloads.sourceforge.net/project/libjpeg-turbo/'
		}
	},
	struct={
		category='01. Basic tools',
		tagline='binary packing & unpacking',
		modules={
			struct={
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/struct/blob/master/struct_test.lua'
				}
			}
		},
		link={
			'struct',
			'struct.html'
		},
		platforms={
			linux32=true,
			mingw32=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='struct',
		type='Lua/C',
		git_tag='r3',
		c_license='MIT',
		c_link={
			'struct 0.2',
			'http://www.inf.puc-rio.br/~roberto/struct/'
		}
	},
	murmurhash3={
		category='05. Hashing & Compression',
		link={
			'murmurhash3',
			'murmurhash3.html'
		},
		platforms={
		},
		tagline='murmurhash3 in Lua',
		type='Lua+ffi',
		git_tag='r1',
		name='murmurhash3',
		modules={
			murmurhash3={
				source_link={
					'source',
					'https://github.com/luapower/murmurhash3/blob/master/murmurhash3.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/murmurhash3/blob/master/murmurhash3_test.lua'
				}
			}
		}
	},
	pmurhash={
		category='05. Hashing & Compression',
		tagline='murmurhash3 in C',
		modules={
			pmurhash={
				source_link={
					'source',
					'https://github.com/luapower/pmurhash/blob/master/pmurhash.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				}
			}
		},
		link={
			'pmurhash',
			'pmurhash.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='pmurhash',
		type='Lua+ffi',
		git_tag='r2',
		c_license='MIT',
		c_link={
			'pmurhash r146',
			'http://code.google.com/p/smhasher/'
		}
	},
	cjson={
		category='07. Internet Formats',
		tagline='JSON encoding & decoding',
		modules={
			cjson={
				mdep_links={
				},
				pdep_links={
				}
			}
		},
		link={
			'cjson',
			'cjson.html'
		},
		platforms={
			linux32=true,
			mingw32=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			linux64=true
		},
		name='cjson',
		type='Lua/C',
		git_tag='r3',
		c_license='MIT',
		c_link={
			'lua-cjson 2.1.0',
			'http://www.kyne.com.au/~mark/software/lua-cjson.php'
		}
	},
	sha2={
		category='05. Hashing & Compression',
		tagline='SHA-256/-384/-512 hashing',
		modules={
			sha2={
				source_link={
					'source',
					'https://github.com/luapower/sha2/blob/master/sha2.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/sha2/blob/master/sha2_test.lua'
				}
			}
		},
		link={
			'sha2',
			'sha2.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			mingw32=true
		},
		name='sha2',
		type='Lua+ffi',
		git_tag='r2',
		c_license='BSD',
		c_link={
			'sha2 1.0.1',
			'http://www.aarongifford.com/computers/sha.html'
		}
	},
	hunspell={
		category='17. Text Processing',
		tagline='spell checking',
		modules={
			hunspell={
				source_link={
					'source',
					'https://github.com/luapower/hunspell/blob/master/hunspell.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				}
			}
		},
		link={
			'hunspell',
			'hunspell.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			mingw32=true
		},
		name='hunspell',
		type='Lua+ffi',
		git_tag='r2',
		c_license='MPL',
		c_link={
			'hunspell 1.3.2',
			'http://hunspell.sourceforge.net/'
		}
	},
	npapi={
		category='39. Experiments',
		tagline='write browser plugins in Lua',
		modules={
			npapi={
				source_link={
					'source',
					'https://github.com/luapower/npapi/blob/master/npapi.lua'
				},
				pdep_links={
					{
						'lanes',
						'lanes.html'
					},
					{
						'luajit',
						'luajit.html'
					},
					{
						'winapi',
						'winapi.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'lanes',
						'lanes.html'
					},
					{
						'strict',
						'https://github.com/luapower/luajit/blob/master/strict.lua'
					},
					{
						'winapi',
						'winapi.html'
					},
					{
						'winapi.window',
						'https://github.com/luapower/winapi/blob/master/winapi/window.lua'
					}
				}
			}
		},
		link={
			'npapi',
			'npapi.html'
		},
		platforms={
			mingw64=true,
			mingw32=true
		},
		name='npapi',
		type='Lua+ffi',
		git_tag='dev',
		c_license='PD',
		c_link={
			'npcplayer dev',
			'http://luapower.com/npapi'
		}
	},
	obj_parser={
		category='21. 3D Graphics',
		link={
			'obj_parser',
			'obj_parser.html'
		},
		platforms={
		},
		tagline='wavefront OBJ parser',
		type='Lua+ffi',
		git_tag='r1',
		name='obj_parser',
		modules={
			obj_parser={
				source_link={
					'source',
					'https://github.com/luapower/obj_parser/blob/master/obj_parser.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					}
				}
			},
			obj_loader={
				source_link={
					'source',
					'https://github.com/luapower/obj_parser/blob/master/obj_loader.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'stdc',
						'https://github.com/luapower/stdc'
					},
					{
						'tuple',
						'tuple.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'stdio',
						'https://github.com/luapower/stdc/blob/master/stdio.lua'
					},
					{
						'tuple',
						'tuple.html'
					}
				}
			}
		}
	},
	affine2d={
		category='15. 2D Graphics',
		link={
			'affine2d',
			'affine2d.html'
		},
		platforms={
		},
		tagline='2D affine transforms',
		type='Lua',
		git_tag='r1',
		name='affine2d',
		modules={
			affine2d={
				source_link={
					'source',
					'https://github.com/luapower/affine2d/blob/master/affine2d.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/affine2d/blob/master/affine2d_test.lua'
				}
			}
		}
	},
	libpng={
		category='23. Images',
		tagline='PNG reader',
		modules={
			libpng={
				source_link={
					'source',
					'https://github.com/luapower/libpng/blob/master/libpng.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'stdc',
						'https://github.com/luapower/stdc'
					},
					{
						'zlib',
						'zlib.html'
					}
				},
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'jit'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'stdio',
						'https://github.com/luapower/stdc/blob/master/stdio.lua'
					},
					{
						'stdio_h',
						'https://github.com/luapower/stdc/blob/master/stdio_h.lua'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/libpng/blob/master/libpng_demo.lua'
				}
			}
		},
		link={
			'libpng',
			'libpng.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			linux64=true
		},
		name='libpng',
		type='Lua+ffi',
		git_tag='dev',
		c_license='LIBPNG',
		c_link={
			'libpng 1.5.14',
			'http://libpng.org/'
		}
	},
	lexer={
		category='29. Code Editing',
		tagline='scintillua lexer',
		modules={
			lexer={
				source_link={
					'source',
					'https://github.com/luapower/lexer/blob/master/lexer.lua'
				},
				pdep_links={
					{
						'lpeg',
						'lpeg.html'
					}
				},
				mdep_links={
					{
						'lpeg',
						'lpeg.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/lexer/blob/master/lexer_test.lua'
				}
			}
		},
		link={
			'lexer',
			'lexer.html'
		},
		platforms={
		},
		name='lexer',
		type='Lua',
		git_tag='r1',
		c_license='MIT',
		c_link={
			'scintillua 3.3.9-1',
			'http://foicica.com/scintillua/download'
		}
	},
	harfbuzz={
		category='17. Text Processing',
		tagline='complex text shaping',
		modules={
			harfbuzz={
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'freetype_h',
						'https://github.com/luapower/freetype/blob/master/freetype_h.lua'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/harfbuzz/blob/master/harfbuzz_demo.lua'
				},
				source_link={
					'source',
					'https://github.com/luapower/harfbuzz/blob/master/harfbuzz.lua'
				},
				pdep_links={
					{
						'freetype',
						'freetype.html'
					},
					{
						'ucdn',
						'ucdn.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/harfbuzz/blob/master/harfbuzz_test.lua'
				}
			}
		},
		link={
			'harfbuzz',
			'harfbuzz.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			mingw32=true
		},
		name='harfbuzz',
		type='Lua+ffi',
		git_tag='r2',
		c_license='MIT',
		c_link={
			'harfbuzz 0.9.25',
			'http://www.freedesktop.org/software/harfbuzz/release/'
		}
	},
	blur={
		category='Other',
		modules={
		},
		link={
			'blur',
			'https://github.com/luapower/blur'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			linux64=true
		},
		name='blur',
		type='Lua+ffi',
		git_tag='dev',
		c_license='PD',
		c_link={
			'BoxBlur 1.0',
			'http://incubator.quasimondo.com'
		}
	},
	eq={
		category='35. Math',
		link={
			'eq',
			'eq.html'
		},
		platforms={
		},
		tagline='3rd degree equation solver',
		type='Lua',
		git_tag='r1',
		name='eq',
		modules={
			eq={
				source_link={
					'source',
					'https://github.com/luapower/eq/blob/master/eq.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/eq/blob/master/eq_test.lua'
				}
			}
		}
	},
	codedit={
		category='27. Code Editing',
		link={
			'codedit',
			'codedit.html'
		},
		platforms={
		},
		tagline='code editor engine in Lua',
		type='Lua',
		git_tag='dev',
		name='codedit',
		modules={
			codedit={
				source_link={
					'source',
					'https://github.com/luapower/codedit/blob/master/codedit.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'lexer',
						'lexer.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'lexer',
						'lexer.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/codedit/blob/master/codedit_demo.lua'
				}
			},
			codedit_cursor={
				source_link={
					'source',
					'https://github.com/luapower/codedit/blob/master/codedit_cursor.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				}
			},
			codedit_view={
				source_link={
					'source',
					'https://github.com/luapower/codedit/blob/master/codedit_view.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'lexer',
						'lexer.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'lexer',
						'lexer.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				}
			},
			codedit_buffer={
				source_link={
					'source',
					'https://github.com/luapower/codedit/blob/master/codedit_buffer.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				}
			},
			codedit_editor={
				source_link={
					'source',
					'https://github.com/luapower/codedit/blob/master/codedit_editor.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'lexer',
						'lexer.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'lexer',
						'lexer.html'
					},
					{
						'utf8',
						'utf8.html'
					}
				}
			},
			codedit_selection={
				source_link={
					'source',
					'https://github.com/luapower/codedit/blob/master/codedit_selection.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					}
				}
			}
		}
	},
	giflib={
		category='23. Images',
		tagline='GIF reader',
		modules={
			giflib={
				source_link={
					'source',
					'https://github.com/luapower/giflib/blob/master/giflib.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glue',
						'glue.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/giflib/blob/master/giflib_demo.lua'
				}
			}
		},
		link={
			'giflib',
			'giflib.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			linux64=true
		},
		name='giflib',
		type='Lua+ffi',
		git_tag='r2',
		c_license='MIT',
		c_link={
			'giflib 5.0',
			'http://sourceforge.net/projects/giflib/'
		}
	},
	zlib={
		category='05. Hashing & Compression',
		tagline='deflate & gzip',
		modules={
			zlib={
				source_link={
					'source',
					'https://github.com/luapower/zlib/blob/master/zlib.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/zlib/blob/master/zlib_test.lua'
				}
			}
		},
		link={
			'zlib',
			'zlib.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			mingw32=true
		},
		name='zlib',
		type='Lua+ffi',
		git_tag='r2',
		c_license='ZLIB',
		c_link={
			'zlib 1.2.7',
			'http://zlib.org/'
		}
	},
	md5={
		category='05. Hashing & Compression',
		tagline='md5 hashing',
		modules={
			md5={
				source_link={
					'source',
					'https://github.com/luapower/md5/blob/master/md5.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/md5/blob/master/md5_test.lua'
				}
			}
		},
		link={
			'md5',
			'md5.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			mingw32=true
		},
		name='md5',
		type='Lua+ffi',
		git_tag='r2',
		c_license='PD',
		c_link={
			'md5 1.0',
			'http://openwall.info/wiki/people/solar/software/public-domain-source-code/md5'
		}
	},
	crc32={
		category='05. Hashing & Compression',
		link={
			'crc32',
			'crc32.html'
		},
		platforms={
		},
		tagline='CRC-32 in Lua',
		type='Lua+ffi',
		git_tag='r1',
		name='crc32',
		modules={
			crc32={
				source_link={
					'source',
					'https://github.com/luapower/crc32/blob/master/crc32.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				}
			}
		}
	},
	glut={
		category='21. 3D Graphics',
		tagline='OpenGL GLUT',
		modules={
			glut={
				source_link={
					'source',
					'https://github.com/luapower/glut/blob/master/glut.lua'
				},
				pdep_links={
					{
						'opengl',
						'opengl.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'gl_types',
						'https://github.com/luapower/opengl/blob/master/gl_types.lua'
					}
				}
			}
		},
		link={
			'glut',
			'glut.html'
		},
		platforms={
			mingw64=true,
			mingw32=true,
			['mingw64-from-win32']=true
		},
		name='glut',
		type='Lua+ffi',
		git_tag='r1',
		c_license='MIT',
		c_link={
			'freeglut 2.8.1',
			'http://freeglut.sourceforge.net/'
		}
	},
	libb64={
		category='07. Internet Formats',
		tagline='base64 encoding & decoding',
		modules={
			libb64={
				source_link={
					'source',
					'https://github.com/luapower/libb64/blob/master/libb64.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/libb64/blob/master/libb64_test.lua'
				}
			}
		},
		link={
			'libb64',
			'libb64.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='libb64',
		type='Lua+ffi',
		git_tag='r2',
		c_license='PD',
		c_link={
			'libb64 1.2',
			'http://libb64.sourceforge.net/'
		}
	},
	libmariadb={
		category='Other',
		tagline='MariaDB client library',
		modules={
		},
		link={
			'libmariadb',
			'libmariadb.html'
		},
		platforms={
			mingw64=true,
			mingw32=true,
			linux32=true,
			linux64=true
		},
		name='libmariadb',
		type='C',
		git_tag='r1',
		c_license='LGPL',
		c_link={
			'MariaDB-Client 1.0.0',
			'https://downloads.mariadb.org/client-native/'
		}
	},
	nw={
		category='Other',
		link={
			'nw',
			'nw.html'
		},
		platforms={
			mingw64=true,
			mingw32=true
		},
		tagline='native widgets',
		type='Lua+ffi',
		git_tag='dev',
		name='nw',
		modules={
			nw={
				source_link={
					'source',
					'https://github.com/luapower/nw/blob/master/nw.lua'
				},
				pdep_links={
					{
						'box2d',
						'box2d.html'
					},
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'box2d',
						'box2d.html'
					},
					{
						'glue',
						'glue.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/nw/blob/master/nw_test.lua'
				}
			}
		}
	},
	bitmap={
		category='23. Images',
		link={
			'bitmap',
			'bitmap.html'
		},
		platforms={
		},
		tagline='in-memory bitmaps',
		type='Lua+ffi',
		git_tag='r1',
		name='bitmap',
		modules={
			bitmap={
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glue',
						'glue.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/bitmap/blob/master/bitmap_demo.lua'
				},
				source_link={
					'source',
					'https://github.com/luapower/bitmap/blob/master/bitmap.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/bitmap/blob/master/bitmap_test.lua'
				}
			}
		}
	},
	genx={
		category='07. Internet Formats',
		tagline='XML writer',
		modules={
			genx={
				source_link={
					'source',
					'https://github.com/luapower/genx/blob/master/genx.lua'
				},
				pdep_links={
					{
						'stdc',
						'https://github.com/luapower/stdc'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'stdio_h',
						'https://github.com/luapower/stdc/blob/master/stdio_h.lua'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/genx/blob/master/genx_demo.lua'
				}
			}
		},
		link={
			'genx',
			'genx.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='genx',
		type='Lua+ffi',
		git_tag='r2',
		c_license='MIT',
		c_link={
			'genx beta5',
			'http://www.tbray.org/ongoing/When/200x/2004/02/20/GenxStatus'
		}
	},
	tuple={
		category='01. Basic tools',
		link={
			'tuple',
			'tuple.html'
		},
		platforms={
		},
		tagline='real tuples',
		type='Lua',
		git_tag='r1',
		name='tuple',
		modules={
			tuple={
				source_link={
					'source',
					'https://github.com/luapower/tuple/blob/master/tuple.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/tuple/blob/master/tuple_test.lua'
				}
			}
		}
	},
	cairo={
		category='15. 2D Graphics',
		tagline='cairo graphics engine',
		modules={
			cairo={
				source_link={
					'source',
					'https://github.com/luapower/cairo/blob/master/cairo.lua'
				},
				pdep_links={
					{
						'freetype',
						'freetype.html'
					},
					{
						'libpng',
						'libpng.html'
					},
					{
						'pixman',
						'pixman.html'
					},
					{
						'zlib',
						'zlib.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				}
			}
		},
		link={
			'cairo',
			'cairo.html'
		},
		platforms={
			linux32=true,
			linux64=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			mingw32=true
		},
		name='cairo',
		type='Lua+ffi',
		git_tag='r2',
		c_license='LGPL',
		c_link={
			'cairo 1.12.16',
			'http://cairographics.org/releases/'
		}
	},
	lfs={
		category='03. Basic OS',
		tagline='filesystem support',
		modules={
			lfs={
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/lfs/blob/master/lfs_test.lua'
				}
			}
		},
		link={
			'lfs',
			'lfs.html'
		},
		platforms={
			linux32=true,
			mingw32=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='lfs',
		type='Lua/C',
		git_tag='r3',
		c_license='MIT',
		c_link={
			'LuaFileSystem 1.6.2',
			'https://github.com/keplerproject/luafilesystem.git'
		}
	},
	winapi={
		category='Other',
		link={
			'winapi',
			'winapi.html'
		},
		platforms={
			mingw32=true
		},
		tagline='windows & widgets',
		type='Lua+ffi',
		git_tag='r2',
		name='winapi',
		modules={
			winapi={
				source_link={
					'source',
					'https://github.com/luapower/winapi/blob/master/winapi.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'stdc',
						'https://github.com/luapower/stdc'
					}
				},
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'ctypes',
						'https://github.com/luapower/stdc/blob/master/ctypes.lua'
					},
					{
						'glue',
						'glue.html'
					}
				}
			}
		}
	},
	hpdf={
		category='15. 2D Graphics',
		tagline='PDF writer',
		modules={
			hpdf={
				source_link={
					'source',
					'https://github.com/luapower/hpdf/blob/master/hpdf.lua'
				},
				pdep_links={
					{
						'libpng',
						'libpng.html'
					},
					{
						'zlib',
						'zlib.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				}
			}
		},
		link={
			'hpdf',
			'hpdf.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			mingw32=true
		},
		name='hpdf',
		type='Lua+ffi',
		git_tag='r2',
		c_license='ZLIB/LIBPNG',
		c_link={
			'libharu 2.3.0RC3',
			'http://libharu.org/'
		}
	},
	box2d={
		category='25. GUI',
		link={
			'box2d',
			'box2d.html'
		},
		platforms={
		},
		tagline='rectangle math',
		type='Lua',
		git_tag='r1',
		name='box2d',
		modules={
			box2d={
				source_link={
					'source',
					'https://github.com/luapower/box2d/blob/master/box2d.lua'
				},
				pdep_links={
				},
				mdep_links={
				}
			}
		}
	},
	pixman={
		category='37. Support Packages',
		tagline='pixel manipulation',
		modules={
		},
		link={
			'pixman',
			'pixman.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='pixman',
		type='C',
		git_tag='r2',
		c_license='MIT',
		c_link={
			'pixman 0.32.4',
			'http://cairographics.org/releases/'
		}
	},
	cplayer={
		category='25. GUI',
		link={
			'cplayer',
			'cplayer.html'
		},
		platforms={
			mingw32=true
		},
		tagline='procedural graphics & IMGUI toolkit',
		type='Lua+ffi',
		git_tag='dev',
		name='cplayer',
		modules={
			cplayer={
				source_link={
					'source',
					'https://github.com/luapower/cplayer/blob/master/cplayer.lua'
				},
				pdep_links={
					{
						'box2d',
						'box2d.html'
					},
					{
						'cairo',
						'cairo.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'winapi',
						'winapi.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'box2d',
						'box2d.html'
					},
					{
						'cairo',
						'cairo.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'winapi',
						'winapi.html'
					},
					{
						'winapi.cairopanel',
						'https://github.com/luapower/winapi/blob/master/winapi/cairopanel.lua'
					},
					{
						'winapi.keyboard',
						'https://github.com/luapower/winapi/blob/master/winapi/keyboard.lua'
					},
					{
						'winapi.mouse',
						'https://github.com/luapower/winapi/blob/master/winapi/mouse.lua'
					},
					{
						'winapi.time',
						'https://github.com/luapower/winapi/blob/master/winapi/time.lua'
					},
					{
						'winapi.windowclass',
						'https://github.com/luapower/winapi/blob/master/winapi/windowclass.lua'
					}
				}
			}
		}
	},
	path2d={
		link={
			'path2d',
			'https://github.com/luapower/path2d'
		},
		platforms={
		},
		category='Other',
		type='Lua',
		git_tag='dev',
		name='path2d',
		modules={
			path_shapes={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path_shapes.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				demo_link={
					'demo',
					'https://github.com/luapower/path2d/blob/master/path_shapes_demo.lua'
				}
			},
			path_arc={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path_arc.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/path2d/blob/master/path_arc_demo.lua'
				}
			},
			path_svgarc={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path_svgarc.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/path2d/blob/master/path_svgarc_demo.lua'
				}
			},
			path_circle_3p={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path_circle_3p.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				demo_link={
					'demo',
					'https://github.com/luapower/path2d/blob/master/path_circle_3p_demo.lua'
				}
			},
			path_point={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path_point.lua'
				},
				pdep_links={
				},
				mdep_links={
				}
			},
			path_bezier2={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path_bezier2.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/path2d/blob/master/path_bezier2_demo.lua'
				}
			},
			path_line={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path_line.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				demo_link={
					'demo',
					'https://github.com/luapower/path2d/blob/master/path_line_demo.lua'
				}
			},
			path_bezier3={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path_bezier3.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/path2d/blob/master/path_bezier3_demo.lua'
				}
			},
			path={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path.lua'
				},
				pdep_links={
					{
						'eq',
						'eq.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'pp',
						'pp.html'
					}
				},
				mdep_links={
					{
						'eq',
						'eq.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'pp',
						'pp.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/path2d/blob/master/path_demo.lua'
				}
			},
			path_arc_3p={
				source_link={
					'source',
					'https://github.com/luapower/path2d/blob/master/path_arc_3p.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/path2d/blob/master/path_arc_3p_demo.lua'
				}
			}
		}
	},
	pp={
		category='01. Basic tools',
		link={
			'pp',
			'pp.html'
		},
		platforms={
		},
		tagline='table serialization',
		type='Lua',
		git_tag='r2',
		name='pp',
		modules={
			pp={
				source_link={
					'source',
					'https://github.com/luapower/pp/blob/master/pp.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/pp/blob/master/pp_test.lua'
				}
			}
		}
	},
	wluajit={
		category='37. Support Packages',
		tagline='luajit no-console wrapper',
		modules={
		},
		link={
			'wluajit',
			'wluajit.html'
		},
		platforms={
			mingw64=true,
			mingw32=true
		},
		name='wluajit',
		type='C',
		git_tag='r2',
		c_license='MIT',
		c_link={
			'wluajit 1.0',
			'https://github.com/LuaDist/luajit'
		}
	},
	stdc={
		link={
			'stdc',
			'https://github.com/luapower/stdc'
		},
		platforms={
		},
		category='Other',
		type='Lua+ffi',
		git_tag='r1',
		name='stdc',
		modules={
		}
	},
	dlist={
		category='01. Basic tools',
		link={
			'dlist',
			'dlist.html'
		},
		platforms={
		},
		tagline='doubly linked lists',
		type='Lua',
		git_tag='r1',
		name='dlist',
		modules={
			dlist={
				source_link={
					'source',
					'https://github.com/luapower/dlist/blob/master/dlist.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/dlist/blob/master/dlist_test.lua'
				}
			}
		}
	},
	coro={
		category='01. Basic tools',
		link={
			'coro',
			'coro.html'
		},
		platforms={
		},
		tagline='symmetric coroutines',
		type='Lua',
		git_tag='r1',
		name='coro',
		modules={
			coro={
				source_link={
					'source',
					'https://github.com/luapower/coro/blob/master/coro.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/coro/blob/master/coro_test.lua'
				}
			}
		}
	},
	color={
		category='31. Colors',
		link={
			'color',
			'color.html'
		},
		platforms={
		},
		tagline='color computation',
		type='Lua',
		git_tag='r1',
		name='color',
		modules={
			color={
				source_link={
					'source',
					'https://github.com/luapower/color/blob/master/color.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				demo_link={
					'demo',
					'https://github.com/luapower/color/blob/master/color_demo.lua'
				}
			}
		}
	},
	['lua-headers']={
		category='37. Support Packages',
		tagline='Lua C API headers',
		modules={
		},
		link={
			'lua-headers',
			'lua-headers.html'
		},
		platforms={
		},
		name='lua-headers',
		type='C',
		git_tag='r1',
		c_license='MIT',
		c_link={
			'lua-headers 5.1.5',
			'http://www.lua.org/'
		}
	},
	unit={
		link={
			'unit',
			'https://github.com/luapower/unit'
		},
		platforms={
		},
		category='Other',
		type='Lua+ffi',
		git_tag='dev',
		name='unit',
		modules={
		}
	},
	fribidi={
		category='17. Text Processing',
		tagline='unicode BiDi algorithm',
		modules={
			fribidi={
				source_link={
					'source',
					'https://github.com/luapower/fribidi/blob/master/fribidi.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/fribidi/blob/master/fribidi_test.lua'
				}
			}
		},
		link={
			'fribidi',
			'fribidi.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='fribidi',
		type='Lua+ffi',
		git_tag='dev',
		c_license='LGPL',
		c_link={
			'FriBiDi HEAD-2013-06-08',
			'git://anongit.freedesktop.org/fribidi/fribidi'
		}
	},
	lpeg2={
		category='Other',
		tagline='parsing expression grammars',
		modules={
			lpeg2={
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/lpeg2/blob/master/lpeg2_test.lua'
				}
			}
		},
		link={
			'lpeg2',
			'lpeg2.html'
		},
		platforms={
			linux32=true,
			mingw32=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='lpeg2',
		type='Lua/C',
		git_tag='r1',
		c_license='MIT',
		c_link={
			'lpeg 0.12',
			'http://www.inf.puc-rio.br/~roberto/lpeg/'
		}
	},
	ucdn={
		category='17. Text Processing',
		tagline='unicode database and normalization',
		modules={
			ucdn={
				source_link={
					'source',
					'https://github.com/luapower/ucdn/blob/master/ucdn.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				}
			}
		},
		link={
			'ucdn',
			'ucdn.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			mingw32=true
		},
		name='ucdn',
		type='Lua+ffi',
		git_tag='r2',
		c_license='MIT',
		c_link={
			'ucdn 0.9.25',
			'http://www.freedesktop.org/software/harfbuzz/release/'
		}
	},
	lanes={
		category='03. Basic OS',
		tagline='threads support',
		modules={
			lanes={
				source_link={
					'source',
					'https://github.com/luapower/lanes/blob/master/lanes.lua'
				},
				pdep_links={
				},
				mdep_links={
				}
			}
		},
		link={
			'lanes',
			'lanes.html'
		},
		platforms={
			linux32=true,
			linux64=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			mingw32=true
		},
		name='lanes',
		type='Lua/C',
		git_tag='r4',
		c_license='MIT',
		c_link={
			'LuaLanes 3.9.3',
			'https://github.com/LuaLanes/lanes'
		}
	},
	libunibreak={
		category='17. Text Processing',
		tagline='unicode line breaking',
		modules={
			libunibreak={
				source_link={
					'source',
					'https://github.com/luapower/libunibreak/blob/master/libunibreak.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/libunibreak/blob/master/libunibreak_demo.lua'
				}
			}
		},
		link={
			'libunibreak',
			'libunibreak.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			linux64=true
		},
		name='libunibreak',
		type='Lua+ffi',
		git_tag='r2',
		c_license='ZLIB/LIBPNG',
		c_link={
			'libunibreak 1.0',
			'http://vimgadgets.sourceforge.net/libunibreak/'
		}
	},
	dynasm={
		category='01. Basic tools',
		tagline='DynASM with Lua mode',
		modules={
			dynasm={
				mdep_links={
				},
				source_link={
					'source',
					'https://github.com/luapower/dynasm/blob/master/dynasm.lua'
				},
				pdep_links={
				}
			}
		},
		link={
			'dynasm',
			'dynasm.html'
		},
		platforms={
			osx32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			mingw32=true,
			linux64=true
		},
		name='dynasm',
		type='Lua+ffi',
		git_tag='dev',
		c_license='MIT',
		c_link={
			'DynASM 1.3.0',
			'http://luajit.org/dynasm.html'
		}
	},
	hmac={
		category='05. Hashing & Compression',
		link={
			'hmac',
			'hmac.html'
		},
		platforms={
		},
		tagline='HMAC hashing',
		type='Lua+ffi',
		git_tag='r1',
		name='hmac',
		modules={
			hmac={
				source_link={
					'source',
					'https://github.com/luapower/hmac/blob/master/hmac.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glue',
						'glue.html'
					}
				}
			}
		}
	},
	fbclient={
		category='09. Databases',
		link={
			'fbclient',
			'fbclient.html'
		},
		platforms={
		},
		tagline='firebird database client',
		type='Lua+ffi',
		git_tag='dev',
		name='fbclient',
		modules={
			fbclient={
				source_link={
					'source',
					'https://github.com/luapower/fbclient/blob/master/fbclient.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'struct',
						'struct.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'struct',
						'struct.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/fbclient/blob/master/fbclient_test.lua'
				}
			}
		}
	},
	socket={
		category='03. Basic OS',
		tagline='networking support',
		modules={
			socket={
				source_link={
					'source',
					'https://github.com/luapower/socket/blob/master/socket.lua'
				},
				pdep_links={
				},
				mdep_links={
				}
			}
		},
		link={
			'socket',
			'socket.html'
		},
		platforms={
			linux32=true,
			mingw32=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='socket',
		type='Lua/C',
		git_tag='r4',
		c_license='MIT',
		c_link={
			'LuaSocket 3.0-rc1',
			'https://github.com/diegonehab/luasocket'
		}
	},
	sg={
		link={
			'sg',
			'https://github.com/luapower/sg'
		},
		platforms={
		},
		category='Other',
		type='Lua+ffi',
		git_tag='dev',
		name='sg',
		modules={
			sg_gl_shape={
				source_link={
					'source',
					'https://github.com/luapower/sg/blob/master/sg_gl_shape.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'opengl',
						'opengl.html'
					},
					{
						'winapi',
						'winapi.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glu_lua',
						'https://github.com/luapower/opengl/blob/master/glu_lua.lua'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'winapi.gl21',
						'https://github.com/luapower/winapi/blob/master/winapi/gl21.lua'
					}
				}
			},
			sg_gl_mesh={
				source_link={
					'source',
					'https://github.com/luapower/sg/blob/master/sg_gl_mesh.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'opengl',
						'opengl.html'
					},
					{
						'winapi',
						'winapi.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glu_lua',
						'https://github.com/luapower/opengl/blob/master/glu_lua.lua'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'winapi.gl21',
						'https://github.com/luapower/winapi/blob/master/winapi/gl21.lua'
					}
				}
			},
			sg_gl={
				source_link={
					'source',
					'https://github.com/luapower/sg/blob/master/sg_gl.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'opengl',
						'opengl.html'
					},
					{
						'winapi',
						'winapi.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glu_lua',
						'https://github.com/luapower/opengl/blob/master/glu_lua.lua'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'winapi.gl21',
						'https://github.com/luapower/winapi/blob/master/winapi/gl21.lua'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/sg/blob/master/sg_gl_demo.lua'
				}
			},
			sg_cairo={
				source_link={
					'source',
					'https://github.com/luapower/sg/blob/master/sg_cairo.lua'
				},
				pdep_links={
					{
						'cairo',
						'cairo.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'path2d',
						'https://github.com/luapower/path2d'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'cairo',
						'cairo.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'path_cairo',
						'https://github.com/luapower/path2d/blob/master/path_cairo.lua'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/sg/blob/master/sg_cairo_demo.lua'
				}
			},
			sg_gl_obj={
				source_link={
					'source',
					'https://github.com/luapower/sg/blob/master/sg_gl_obj.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'obj_parser',
						'obj_parser.html'
					},
					{
						'opengl',
						'opengl.html'
					},
					{
						'winapi',
						'winapi.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glu_lua',
						'https://github.com/luapower/opengl/blob/master/glu_lua.lua'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'obj_loader',
						'obj_loader.html'
					},
					{
						'winapi.gl21',
						'https://github.com/luapower/winapi/blob/master/winapi/gl21.lua'
					}
				}
			}
		}
	},
	clipper={
		category='15. 2D Graphics',
		tagline='polygon clipping',
		modules={
			clipper={
				source_link={
					'source',
					'https://github.com/luapower/clipper/blob/master/clipper.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/clipper/blob/master/clipper_demo.lua'
				}
			}
		},
		link={
			'clipper',
			'clipper.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			mingw32=true
		},
		name='clipper',
		type='Lua+ffi',
		git_tag='r2',
		c_license='Boost',
		c_link={
			'Clipper HEAD-2013-05-22',
			'http://sourceforge.net/p/polyclipping/code/HEAD/tree/trunk/cpp/'
		}
	},
	nanojpeg={
		category='23. Images',
		tagline='JPEG reader',
		modules={
			nanojpeg={
				source_link={
					'source',
					'https://github.com/luapower/nanojpeg/blob/master/nanojpeg.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'stdc',
						'https://github.com/luapower/stdc'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'stdio',
						'https://github.com/luapower/stdc/blob/master/stdio.lua'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/nanojpeg/blob/master/nanojpeg_demo.lua'
				}
			}
		},
		link={
			'nanojpeg',
			'nanojpeg.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='nanojpeg',
		type='Lua+ffi',
		git_tag='r2',
		c_license='BSD',
		c_link={
			'nanojpeg 1.3',
			'http://keyj.emphy.de/nanojpeg/'
		}
	},
	minizip={
		category='05. Hashing & Compression',
		tagline='ZIP reader & writer',
		modules={
			minizip={
				source_link={
					'source',
					'https://github.com/luapower/minizip/blob/master/minizip.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					},
					{
						'zlib',
						'zlib.html'
					}
				},
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glue',
						'glue.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/minizip/blob/master/minizip_test.lua'
				}
			}
		},
		link={
			'minizip',
			'minizip.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			linux64=true
		},
		name='minizip',
		type='Lua+ffi',
		git_tag='r2',
		c_license='MIT',
		c_link={
			'minizip 1.1',
			'http://www.winimage.com/zLibDll/minizip.html'
		}
	},
	utf8={
		category='17. Text Processing',
		link={
			'utf8',
			'utf8.html'
		},
		platforms={
		},
		tagline='UTF-8 in Lua',
		type='Lua',
		git_tag='dev',
		name='utf8',
		modules={
			utf8={
				source_link={
					'source',
					'https://github.com/luapower/utf8/blob/master/utf8.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/utf8/blob/master/utf8_test.lua'
				}
			}
		}
	},
	vararg={
		category='01. Basic tools',
		tagline='vararg manipulation',
		modules={
			vararg={
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/vararg/blob/master/vararg_test.lua'
				}
			}
		},
		link={
			'vararg',
			'vararg.html'
		},
		platforms={
			linux32=true,
			linux64=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			mingw32=true
		},
		name='vararg',
		type='Lua/C',
		git_tag='r3',
		c_license='MIT',
		c_link={
			'vararg 1.0.1',
			'http://www.tecgraf.puc-rio.br/~maia/lua/vararg/'
		}
	},
	lpeg={
		category='Other',
		tagline='parsing expression grammars',
		modules={
			lpeg={
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/lpeg/blob/master/lpeg_test.lua'
				}
			}
		},
		link={
			'lpeg',
			'lpeg.html'
		},
		platforms={
			linux32=true,
			mingw32=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='lpeg',
		type='Lua/C',
		git_tag='r1',
		c_license='MIT',
		c_link={
			'lpeg 0.10',
			'http://www.inf.puc-rio.br/~roberto/lpeg/lpeg-0.10.2.tar.gz'
		}
	},
	objc={
		type='Lua+ffi',
		link={
			'objc',
			'objc.html'
		},
		platforms={
			osx32=true,
			osx64=true
		},
		git_tag='r1',
		category='Other',
		tagline='Obj-C & Cocoa bridge',
		name='objc',
		modules={
			objc={
				source_link={
					'source',
					'https://github.com/luapower/objc/blob/master/objc.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/objc/blob/master/objc_test.lua'
				}
			}
		}
	},
	mysql={
		category='09. Databases',
		link={
			'mysql',
			'mysql.html'
		},
		platforms={
		},
		tagline='mysql database client',
		type='Lua+ffi',
		git_tag='r1',
		name='mysql',
		modules={
			mysql={
				source_link={
					'source',
					'https://github.com/luapower/mysql/blob/master/mysql.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'bit',
						'http://luajit.org/extensions.html'
					},
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/mysql/blob/master/mysql_test.lua'
				}
			}
		}
	},
	opengl={
		category='21. 3D Graphics',
		link={
			'opengl',
			'opengl.html'
		},
		platforms={
		},
		tagline='OpenGL C API',
		type='Lua+ffi',
		git_tag='r1',
		name='opengl',
		modules={
		}
	},
	libmysql={
		category='Other',
		tagline='MySQL client library',
		modules={
		},
		link={
			'libmysql',
			'libmysql.html'
		},
		platforms={
			linux32=true,
			linux64=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			mingw32=true
		},
		name='libmysql',
		type='C',
		git_tag='r1',
		c_license='GPL',
		c_link={
			'libmysql 6.1.1',
			'http://downloads.mysql.com/archives/c-c/'
		}
	},
	libvlc={
		category='33. Motion',
		tagline='VLC media player',
		modules={
		},
		link={
			'libvlc',
			'libvlc.html'
		},
		platforms={
		},
		name='libvlc',
		type='Lua+ffi',
		git_tag='dev',
		c_license='LGPL',
		c_link={
			'libvlc 2.0.5',
			'http://www.videolan.org/vlc/libvlc.html'
		}
	},
	freetype={
		category='19. Text Rasterization',
		tagline='freetype font engine',
		modules={
			freetype={
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/freetype/blob/master/freetype_demo.lua'
				},
				source_link={
					'source',
					'https://github.com/luapower/freetype/blob/master/freetype.lua'
				},
				pdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/freetype/blob/master/freetype_test.lua'
				}
			}
		},
		link={
			'freetype',
			'freetype.html'
		},
		platforms={
			mingw32=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx64=true,
			osx32=true,
			linux64=true
		},
		name='freetype',
		type='Lua+ffi',
		git_tag='r2',
		c_license='FTL/BSD',
		c_link={
			'freetype 2.5.0.1',
			'http://download.savannah.gnu.org/releases/freetype/'
		}
	},
	glue={
		category='01. Basic tools',
		link={
			'glue',
			'glue.html'
		},
		platforms={
		},
		tagline='everyday Lua functions',
		type='Lua',
		git_tag='r4',
		name='glue',
		modules={
			glue={
				source_link={
					'source',
					'https://github.com/luapower/glue/blob/master/glue.lua'
				},
				pdep_links={
				},
				mdep_links={
				},
				test_link={
					'test',
					'https://github.com/luapower/glue/blob/master/glue_test.lua'
				}
			}
		}
	},
	chipmunk={
		category='33. Motion',
		tagline='chipmunk physics engine',
		modules={
			chipmunk={
				source_link={
					'source',
					'https://github.com/luapower/chipmunk/blob/master/chipmunk.lua'
				},
				pdep_links={
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					}
				},
				demo_link={
					'demo',
					'https://github.com/luapower/chipmunk/blob/master/chipmunk_demo.lua'
				}
			}
		},
		link={
			'chipmunk',
			'chipmunk.html'
		},
		platforms={
			linux64=true,
			linux32=true,
			['mingw64-from-win32']=true,
			mingw64=true,
			osx32=true,
			osx64=true,
			mingw32=true
		},
		name='chipmunk',
		type='Lua+ffi',
		git_tag='dev',
		c_license='MIT',
		c_link={
			'chipmunk2D 6.2.1',
			'http://chipmunk-physics.net/'
		}
	},
	svg_parser={
		category='15. 2D Graphics',
		link={
			'svg_parser',
			'svg_parser.html'
		},
		platforms={
		},
		tagline='SVG parser',
		type='Lua+ffi',
		git_tag='dev',
		name='svg_parser',
		modules={
			svg_parser={
				source_link={
					'source',
					'https://github.com/luapower/svg_parser/blob/master/svg_parser.lua'
				},
				pdep_links={
					{
						'expat',
						'expat.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'lpeg',
						'lpeg.html'
					}
				},
				mdep_links={
					{
						'expat',
						'expat.html'
					},
					{
						'glue',
						'glue.html'
					},
					{
						'lpeg.re',
						'https://github.com/luapower/lpeg/blob/master/lpeg/re.lua'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/svg_parser/blob/master/svg_parser_test.lua'
				}
			}
		}
	},
	openvg={
		category='15. 2D Graphics',
		link={
			'openvg',
			'openvg.html'
		},
		platforms={
		},
		tagline='OpenVG C API',
		type='Lua+ffi',
		git_tag='dev',
		name='openvg',
		modules={
			openvg={
				source_link={
					'source',
					'https://github.com/luapower/openvg/blob/master/openvg.lua'
				},
				pdep_links={
					{
						'glue',
						'glue.html'
					}
				},
				mdep_links={
					{
						'ffi',
						'http://luajit.org/ext_ffi.html'
					},
					{
						'glue',
						'glue.html'
					}
				},
				test_link={
					'test',
					'https://github.com/luapower/openvg/blob/master/openvg_test.lua'
				}
			}
		}
	}
}